CREATE OR REPLACE PROCEDURE CALCULAR_MEDIA_PONDERADA_V1 AS
    v_CODPROD         INTEGER;
        v_CODEMP          INTEGER;
        v_QTDNEG          NUMBER;
        v_VLRTOT          NUMBER;
        v_DATA            DATE;
        v_QTD_TOTAL       NUMBER := 0;
        v_VLRTOT_TOTAL    NUMBER := 0;
        v_ESTOQUE_ACUMULADO NUMBER;
        v_MEDIA_PONDERADA NUMBER;
        CURSOR c_dados is
SELECT EST.CODPROD, EST.CODEMP, EST.QTDNEG, EST.VLRTOT, EST.DTENTSAI, EST.ESTOQUE_ACUMULADO
FROM HVL_MOVIMENTO_ESTOQUE EST
WHERE EST.CODPROD = v_CODPROD
  AND EST.CODEMP = v_CODEMP
ORDER BY EST.DTENTSAI;

BEGIN

    OPEN c_dados;

    FETCH c_dados INTO v_CODPROD, v_CODEMP, v_QTDNEG, v_VLRTOT, v_DATA, v_ESTOQUE_ACUMULADO;

    WHILE c_dados%FOUND LOOP
        IF v_ESTOQUE_ACUMULADO <> 0 THEN
                v_QTD_TOTAL := v_QTD_TOTAL + v_QTDNEG;
        v_VLRTOT_TOTAL := v_VLRTOT_TOTAL + (v_VLRTOT * v_QTDNEG);
ELSE
IF v_QTD_TOTAL <> 0 THEN
                    v_MEDIA_PONDERADA := v_VLRTOT_TOTAL / v_QTD_TOTAL;

UPDATE HVL_MOVIMENTO_ESTOQUE SET COLUNA_CALCULO = v_MEDIA_PONDERADA
WHERE CODEMP = v_CODEMP AND CODPROD = v_CODPROD AND DTENTSAI <= v_DATA;

        v_QTD_TOTAL := v_QTDNEG;
        v_VLRTOT_TOTAL := v_VLRTOT * v_QTDNEG;
ELSE
        v_QTD_TOTAL := v_QTDNEG;
        v_VLRTOT_TOTAL := v_VLRTOT * v_QTDNEG;
END IF;
END IF;

FETCH c_dados INTO v_CODPROD, v_CODEMP, v_QTDNEG, v_VLRTOT, v_DATA, v_ESTOQUE_ACUMULADO;
END LOOP;

IF v_QTD_TOTAL <> 0 THEN
        v_MEDIA_PONDERADA := v_VLRTOT_TOTAL / v_QTD_TOTAL;

UPDATE HVL_MOVIMENTO_ESTOQUE SET COLUNA_CALCULO = v_MEDIA_PONDERADA
WHERE CODEMP = v_CODEMP AND CODPROD = v_CODPROD;
END IF;

CLOSE c_dados;
END;